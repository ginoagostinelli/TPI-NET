@page "/reportetipos"
@using ChartJs.Blazor.PieChart
@using Dominio.Model

@inject HttpClient Http

<PageTitle>Solicitudes por tipo</PageTitle>

<h1>Reporte: Solicitudes por tipo</h1>

<p>Solicitudes por tipo</p>


@if (reporte == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <Chart Config="_configuracionPastel"></Chart>
}

@code {


    private PieConfig _configuracionPastel;
    private RepPorTipo[]? reporte;

    private static HttpClient client = new HttpClient();


    protected override async Task OnInitializedAsync()
    {
        reporte = await Http.GetFromJsonAsync<RepPorTipo[]>("http://localhost:5189/repportipo");
        RealizarConfiguracionPastel();
    }

    private void RealizarConfiguracionPastel()
    {
        _configuracionPastel = new PieConfig();
        _configuracionPastel.Options = new PieOptions
            {
                Responsive = true,
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Solicitudes por tipo"
                }
            };

        int total = reporte.Sum(item => item.Total);

        foreach (var item in reporte)
        {

            double percentage = ((double)item.Total / total) * 100;
            string label = $"{item.Nombre} ({item.Total}, {percentage}%)";
            _configuracionPastel.Data.Labels.Add(label);
        }

        PieDataset<int> dataset = new PieDataset<int>((from i in reporte select i.Total).ToArray())
        {
            BackgroundColor = new[]
            {
                "Red", "Blue", "Purple", "Yellow", "Cyan", "Orange", "Gray",
                
            }
        };
        _configuracionPastel.Data.Datasets.Add(dataset);
    }
}
